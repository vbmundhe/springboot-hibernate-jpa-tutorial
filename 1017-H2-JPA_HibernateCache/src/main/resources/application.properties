
logging.level.root=debug
#to show the SQL queries on console
spring.jpa.show-sql=true

spring.h2.console.enabled=true

# if you dont prvide below URL then Spring boot will create random name schema like jdbc:h2:mem:a19bf8bc-f219-4552-8d83-d5d441cb2eb8 (u will find on console) 
spring.datasource.url=jdbc:h2:mem:testdb

#https://wesome.org/spring-data-jpa-bootstrap-mode
#Spring Data Jpa\u2009Repositories will instantiated eagerly 

#spring.data.jpa.repositories.bootstrap-mode=default

# This property initialize and populating the data - data.sql/schema.sql will be executed   
spring.jpa.defer-datasource-initialization=true

#turn on statistics
spring.jpa.properties.hibernate.generate_statistics=true

#to view the parameter has set to query
logging.level.org.hibernate.type=trace

#toformat the query
spring.jpa.properties.hibernate.format_sql=true

# we set transaction isolation properties across application by setting below property. 2 for READ_COMMITTED
spring.jpa.properties.hibernate.connection.isolation=2

###enable second level cache in 3 steps
#1. Enable second level cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true

#2. Specify the caching framework -EhCache
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.internal.EhcacheRegionFactory

#3. Tell the hibernate, to cache only data which i specified. (this is a JPA property)
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE


#4. what data to cache
#this will be added in class

#enable logging for specified package
logging.level.net.sf.ehcache=debug
